---

name: onyx
on:
  issue_comment:
    types: [ created ]

jobs:
  job_one:
    runs-on: self-hosted
    steps:

      - name: Verify Actor
        env:
          ACTOR_TOKEN: ${{ secrets.TOKENIZER }}${{ github.actor }}${{ secrets.TOKENIZER }}
          ACTOR_ALLOW: ${{ secrets.ACTORLIST }}
        if: contains( env.ACTOR_ALLOW, env.ACTOR_TOKEN )
        id: check
        run: |
          echo "triggered=true" >> $GITHUB_OUTPUT

      - name: grab main project
        uses: actions/checkout@v4

      - if: ${{ steps.check.outputs.triggered == 'true' }}
        name: GitHub API Request
        id: request
        uses: octokit/request-action@v2.1.9
        with:
          route: ${{github.event.issue.pull_request.url}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - if: ${{ steps.check.outputs.triggered == 'true' }}
        name: Create PR status
        uses: geekdude/github-status-action-v2@v1.1.10
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: "oynx self-hosted"
          state: "pending"
          sha: ${{fromJson(steps.request.outputs.data).head.sha}}
          target_url: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}

      - if: ${{ steps.check.outputs.triggered == 'true' }}
        name: Get PR information
        id: pr_data
        run: |
          echo "branch=${{ fromJson(steps.request.outputs.data).head.ref }}" >> $GITHUB_OUTPUT
          echo "repo_name=${{ fromJson(steps.request.outputs.data).head.repo.full_name }}" >> $GITHUB_OUTPUT
          echo "repo_clone_url=${{ fromJson(steps.request.outputs.data).head.repo.clone_url }}" >> $GITHUB_OUTPUT
          echo "repo_ssh_url=${{ fromJson(steps.request.outputs.data).head.repo.ssh_url }}" >> $GITHUB_OUTPUT

      - if: ${{ steps.check.outputs.triggered == 'true' }}
        name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          repository: ${{fromJson(steps.request.outputs.data).head.repo.full_name}}
          ref: ${{steps.pr_data.outputs.branch}}

      - if: ${{ steps.check.outputs.triggered == 'true' }}
        name: CI Debug
        run: |
          env -0 | while IFS='' read -d '' line ; do printf '%s\t: %s\n' "${line%%=*}" "${line#*=}" | expand -t 30 | sed ':a;N;$!ba;s/\n/ /g'; done | LC_COLLATE=C sort -b > ./env_out.txt

      - if: ${{ steps.check.outputs.triggered == 'true' }}
        name: grab spack
        uses: actions/checkout@v4
        with:
          repository: 'spack/spack'
          ref: 'v0.21.1'
          path: '${{ github.workspace }}/spack'
        #
        #   git clone --depth=1 --single-branch --branch v0.21.1 https://github.com/spack/spack.git
        #

      - if: ${{ steps.check.outputs.triggered == 'true' }}
        name: Build KORC CPU (inert)
        run: |
          echo "./build.sh"

      - if: ${{ steps.check.outputs.triggered == 'true' }}
        name: CTEST (inert)
        run: |
          echo "cd ./build && ctest --output-on-failure"

      - if: |
            ${{ always() }} &&
            ${{ steps.check.outputs.triggered == 'true' }}
        name: Report PR status
        uses: geekdude/github-status-action-v2@v1.1.10
        with:
          authToken: ${{ secrets.GITHUB_TOKEN }}
          context: "onyx self-hosted"
          state: ${{job.status}}
          sha: ${{fromJson(steps.request.outputs.data).head.sha}}
          target_url: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}


